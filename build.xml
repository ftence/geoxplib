<?xml version="1.0" encoding="utf-8" ?>
<project name="GeoCoord"
         default="build"
         xmlns:ivy="antlib:org.apache.ivy.ant"
         basedir=".">

  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="ant/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>

  <property environment="env"/>

  <property name="user.properties.file" 
            location="${user.home}/.build.properties" /> 

  <!-- Load user specific settings --> 
  <property file="${user.properties.file}"/> 

  <!-- Load the project specific settings --> 
  <property file="build.properties"/> 

  <property name="tests.src" value="${basedir}/test"/>
  <property name="tests.build" value="${basedir}/dist-test"/>
  <property name="tests.reports" value="${basedir}/test.reports"/>
  <property name="src.build" value="${basedir}/dist"/>
  <property name="ivy.distrib" value="${basedir}/distrib"/>
  <property name="build.dir" location="${src.build}"/>
  <property name="lib.dir" location="${basedir}/war/WEB-INF/lib"/>
  <property name="ivy.module.dir" location="${basedir}"/>

  <property name="thrift.gwt" value="true" />
  <property name="thrift.compiler" location="/opt/thrift/bin/thrift"/>
  <property name="thrift.build.dir" location="war/WEB-INF/classes" />

  <mkdir dir="${basedir}/ant"/>

  <import file="${basedir}/ant/net.iroise.ant.ivy.xml"/>
  <import file="${basedir}/ant/net.iroise.ant.thrift.xml"/>

  <!-- Configure path to GWT SDK -->
  <property name="gwt.sdk" location="/opt/gwt-2.0.3" />

  <!-- SWT on Mac requires the -XstartOFirstThreadFlag. -->
<!--
  <condition property="XstartOnFirstThreadFlag" value="-XstartOnFirstThread"
    else="-Dgwt.dummy.arg1=">
    <os family="mac"/>
  </condition>
-->
<property name="XstartOnFirstThreadFlag" value="-Dgwt.dummy.arg1="/>

  <!-- SWT on Mac requires the -d32 flag if the VM is 64-bit. -->
  <condition property="d32Flag" value="-d32" else="-Dgwt.dummy.arg2=">
    <and>
      <os family="mac"/>
      <equals arg1="${sun.arch.data.model}" arg2="64"/>
    </and>
  </condition>

  <path id="project.class.path">
    <pathelement location="war/WEB-INF/classes"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
    <!-- Add any additional non-server libs (such as JUnit) -->
    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
  </path>

  <target name="libs" description="Copy libs to WEB-INF/lib">
    <mkdir dir="war/WEB-INF/lib" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
    <!-- Add any additional server libs that need to be copied -->
  </target>

  <target name="javac" depends="libs,thrift-javac,clean-cassandra-thrift" description="Compile java source">
    <mkdir dir="war/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="utf-8"
        destdir="war/WEB-INF/classes"
        source="1.5" target="1.5" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="clean-cassandra-thrift" description="Remove all but Cassandra.java generated files">
   <delete>
     <fileset dir="${thrift.generated}">
       <include name="org/apache/cassandra/thrift/**.java"/>
       <exclude name="org/apache/cassandra/thrift/Cassandra.java"/>
     </fileset>
   </delete>
  </target>

  <!--
java -cp lib/gwt-user-2.0.3-jar.jar:lib/gwt-dev-2.0.3-jar.jar com.google.gwt.resources.css.InterfaceGenerator -standalone -typeName com.geocoord.client.widgets.poipanel.POIPanelCssResource -css src/com/geocoord/client/widgets/poipanel/POIPanel.css
  -->

  <target name="gwtc" depends="javac" description="GWT compile to JavaScript">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
      <jvmarg value="-Xmx256M"/>
      <jvmarg value="${XstartOnFirstThreadFlag}"/>
      <jvmarg value="${d32Flag}"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg value="com.geocoord.GeoCoord"/>
    </java>
  </target>

  <target name="hosted" depends="javac" description="Run hosted mode">
    <java failonerror="true" fork="true" classname="com.geocoord.HostedMode"> <!-- was com.google.gwt.dev.HostedMode" -->
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <jvmarg value="-Xmx384m"/>
      <jvmarg value="${XstartOnFirstThreadFlag}"/>
      <jvmarg value="${d32Flag}"/>
      <arg value="-startupUrl"/>
      <arg value="GeoCoord.html"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg value="com.geocoord.GeoCoord"/>
    </java>
  </target>

  <target name="build" depends="gwtc" description="Build this project" />

  <target name="war" depends="build" description="Create a war file">
    <zip destfile="GeoCoord.war" basedir="war"/>
  </target>

  <target name="clean" depends="thrift-clean" description="Cleans this project">
    <delete dir="war/WEB-INF/classes" failonerror="false" />
    <delete dir="war/geocoord" failonerror="false" />
  </target>

  <target name="retrieve" description="Retrieve all dependencies with ivy">
    <ivy:retrieve pattern="${lib.dir}/[artifact]-[revision]-[type].[ext]" conf="*"/>
  </target>
</project>
